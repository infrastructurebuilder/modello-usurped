<?xml version="1.0"?>
<!--

    Copyright © 2019 admin (admin@infrastructurebuilder.org)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->

<document>

  <properties>
    <title>Modello XPP3 Plugin</title>
    <author email="hboutemy_AT_apache_DOT_org">Hervé Boutemy</author>
  </properties>

  <body>

    <section name="Modello XPP3 Plugin">

      <p>Modello XPP3 Plugin generates XML readers and writers based on XPP3 API (XML Pull Parser) provided by
      <a href="http://plexus.codehaus.org/plexus-utils/">plexus-utils</a>.</p>

      <p>Notice: DOM content type can be represented either as
      <a href="http://plexus.codehaus.org/plexus-utils/apidocs/org/codehaus/plexus/util/xml/Xpp3Dom.html">plexus-utils' Xpp3Dom</a>
      or, since Modello 1.6, standard
      <a href="http://docs.oracle.com/javase/1.4.2/docs/api/org/w3c/dom/Element.html">org.w3c.dom.Element</a> objects</p>

      <subsection name="xpp3-reader">
      <p><code>xpp3-reader</code> generator creates
        <code><i>my.model.package</i><b>.io.xpp3.</b><i>ModelName</i><b>Xpp3Reader</b></code> class with following
        public methods:
      </p>
      <ul>
        <li><code>public <i>RootClass</i> read( Reader reader, boolean strict )<br/>
            &#160;&#160;&#160;&#160;throws IOException, XmlPullParserException</code></li>

        <li><code>public <i>RootClass</i> read( Reader reader )<br/>
            &#160;&#160;&#160;&#160;throws IOException, XmlPullParserException</code></li>

        <li><code>public <i>RootClass</i> read( InputStream in, boolean strict )<br/>
            &#160;&#160;&#160;&#160;throws IOException, XmlPullParserException</code></li>

        <li><code>public <i>RootClass</i> read( InputStream in )<br/>
            &#160;&#160;&#160;&#160;throws IOException, XmlPullParserException</code></li>

        <li><code>public void setAddDefaultEntities( boolean addDefaultEntities )</code></li>
        <li><code>public boolean getAddDefaultEntities()</code></li>
      </ul>
      </subsection>

      <subsection name="xpp3-writer">
      <p><code>xpp3-writer</code> generator creates
        <code><i>my.model.package</i><b>.io.xpp3.</b><i>ModelName</i><b>Xpp3Writer</b></code> class with following
        public methods:
      </p>

      <ul>
        <li><code>public void write( Writer writer, <i>RootClass</i> root )<br/>
            &#160;&#160;&#160;&#160;throws IOException</code></li>
      </ul>
      </subsection>

      <subsection name="xpp3-extended-reader">
      <p><code>xpp3-extended-reader</code> generator creates
      <code><i>my.model.package</i><b>.io.xpp3.</b><i>ModelName</i><b>Xpp3ReaderEx</b></code> class with same public methods
      as <code>xpp3-reader</code>, but with <a href="../../location-tracking.html">location tracking enabled</a>.</p>
      <p>If source tracking is enabled in addition to location tracking, the public methods have an extra parameter which
      is the source tracker instance.</p>
      </subsection>

      <subsection name="xpp3-extended-writer">
      <p><code>xpp3-extended-writer</code> generator creates
        <code><i>my.model.package</i><b>.io.xpp3.</b><i>ModelName</i><b>Xpp3WriterEx</b></code> class  with same public methods
      as <code>xpp3-writer</code>, but it adds location tracking information on each written field as comments.
      </p>
      </subsection>
    </section>

  </body>

</document>
